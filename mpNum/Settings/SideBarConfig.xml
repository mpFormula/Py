<SideBarConfig version="1.0">
  <SideBar activetab="${res:SharpDevelop.SideBar.ClipboardRing}">
    <SideTab clipboardring="true" text="${res:SharpDevelop.SideBar.ClipboardRing}">
      <SideTabItem text="Text:iLen" value="iLen" />
      <SideTabItem text="Text:Integer" value="Integer" />
      <SideTabItem text="Text:MyPythonFunctionStringReturn0000" value="MyPythonFunctionStringReturn0000" />
      <SideTabItem text="Text:&lt;DllImport(&quot;CallPython.dll&quot;, CallingConvention:..." value="    &#xD;&#xA;    &lt;DllImport(&quot;CallPython.dll&quot;, CallingConvention:=CallingConvention.Cdecl, CharSet:=CharSet.Unicode, SetLastError:=True)&gt; _&#xD;&#xA;    Public Function MyPythonFunctionStringReturn0000( _&#xD;&#xA;        &lt;[In]()&gt; &lt;[Out]()&gt; &lt;MarshalAs(UnmanagedType.LPStr)&gt; ByVal Name As StringBuilder, _&#xD;&#xA;        &lt;[In]()&gt; CharCount As Integer) _&#xD;&#xA;    As Integer&#xD;&#xA;    End Function&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    Sub Test3()&#xD;&#xA;        Const MAX_COMPUTERNAME_LENGTH As Integer = 1500&#xD;&#xA;        Dim Buffer As New StringBuilder(MAX_COMPUTERNAME_LENGTH)&#xD;&#xA;        Dim iLen As Integer&#xD;&#xA;        iLen = MyPythonFunctionStringReturn0000(Buffer, MAX_COMPUTERNAME_LENGTH)&#xD;&#xA;        Buffer.Length = iLen&#xD;&#xA;        System.Console.WriteLine(&quot;Result in .NET: &quot; &amp; Buffer.ToString())&#xD;&#xA;    End Sub&#xD;&#xA;" />
      <SideTabItem text="Text:&lt;[In]()&gt; &lt;[Out]()&gt; &lt;MarshalAs(UnmanagedType.LPS..." value="        &lt;[In]()&gt; &lt;[Out]()&gt; &lt;MarshalAs(UnmanagedType.LPStr)&gt; ByVal Name As StringBuilder, _&#xD;&#xA;" />
      <SideTabItem text="Text:Test3()" value="Test3()" />
      <SideTabItem text="Text:ByVal" value="ByVal " />
      <SideTabItem text="Text:Buffer" value="Buffer" />
      <SideTabItem text="Text:BufferLength" value="BufferLength" />
      <SideTabItem text="Text:BufferLength" value="BufferLength" />
      <SideTabItem text="Text:Dim iLen As Integer" value="Dim iLen As Integer" />
      <SideTabItem text="Text:BufferSize" value="BufferSize" />
      <SideTabItem text="Text:BufferSize" value="BufferSize" />
      <SideTabItem text="Text:&lt;DllImport(&quot;CallPython.dll&quot;, CallingConvention:..." value="    &#xD;&#xA;    &lt;DllImport(&quot;CallPython.dll&quot;, CallingConvention:=CallingConvention.Cdecl, CharSet:=CharSet.Unicode, SetLastError:=True)&gt; _&#xD;&#xA;    Public Function MyPythonFunctionStringReturn00( _&#xD;&#xA;        &lt;[In]()&gt; &lt;MarshalAs(UnmanagedType.LPStr)&gt; ByVal FuncName As String, _&#xD;&#xA;        &lt;[In]()&gt; &lt;[Out]()&gt; &lt;MarshalAs(UnmanagedType.LPStr)&gt; ByVal Result As StringBuilder, _&#xD;&#xA;        &lt;[In]()&gt; ByVal BufferSize As Integer) _&#xD;&#xA;    As Integer&#xD;&#xA;    End Function&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    Sub Test4()&#xD;&#xA;        Const BufferSize As Integer = 1500&#xD;&#xA;        Dim Buffer As New StringBuilder(BufferSize)&#xD;&#xA;        Dim iLen As Integer = MyPythonFunctionStringReturn00(&quot;TestStringMpf0&quot;, Buffer, BufferSize)&#xD;&#xA;        Buffer.Length = iLen&#xD;&#xA;        System.Console.WriteLine(&quot;Result0 in .NET: &quot; &amp; Buffer.ToString())&#xD;&#xA;    End Sub&#xD;&#xA;" />
      <SideTabItem text="Text:&lt;[In]()&gt; &lt;MarshalAs(UnmanagedType.LPStr)&gt; ByVal..." value="        &lt;[In]()&gt; &lt;MarshalAs(UnmanagedType.LPStr)&gt; ByVal FuncName As String, _" />
      <SideTabItem text="Text:Test4()" value="        Test4()&#xD;&#xA;" />
      <SideTabItem text="Text:&lt;DllImport(&quot;CallPython.dll&quot;, CallingConvention:..." value="    &#xD;&#xA;    &lt;DllImport(&quot;CallPython.dll&quot;, CallingConvention:=CallingConvention.Cdecl, CharSet:=CharSet.Unicode, SetLastError:=True)&gt; _&#xD;&#xA;    Public Function MyPythonFunctionStringReturn01( _&#xD;&#xA;        &lt;[In]()&gt; &lt;MarshalAs(UnmanagedType.LPStr)&gt; ByVal FuncName As String, _&#xD;&#xA;        &lt;[In]()&gt; &lt;MarshalAs(UnmanagedType.LPStr)&gt; ByVal Arg01 As String, _&#xD;&#xA;        &lt;[In]()&gt; &lt;[Out]()&gt; &lt;MarshalAs(UnmanagedType.LPStr)&gt; ByVal Result As StringBuilder, _&#xD;&#xA;        &lt;[In]()&gt; ByVal BufferSize As Integer) _&#xD;&#xA;    As Integer&#xD;&#xA;    End Function&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    Sub Test5()&#xD;&#xA;        Const BufferSize As Integer = 1500&#xD;&#xA;        Dim Buffer As New StringBuilder(BufferSize)&#xD;&#xA;        Dim iLen As Integer = MyPythonFunctionStringReturn01(&quot;TestStringMpf1&quot;, &quot;3&quot;, Buffer, BufferSize)&#xD;&#xA;        Buffer.Length = iLen&#xD;&#xA;        System.Console.WriteLine(&quot;Result01 in .NET: &quot; &amp; Buffer.ToString())&#xD;&#xA;    End Sub&#xD;&#xA;" />
      <SideTabItem text="Text:&lt;[In]()&gt; &lt;MarshalAs(UnmanagedType.LPStr)&gt; ByVal..." value="        &lt;[In]()&gt; &lt;MarshalAs(UnmanagedType.LPStr)&gt; ByVal Arg01 As String, _" />
      <SideTabItem text="Text:&quot;3&quot;," value="&quot;3&quot;, " />
      <SideTabItem text="Text:Test5()" value="        Test5()&#xD;&#xA;" />
    </SideTab>
  </SideBar>
</SideBarConfig>